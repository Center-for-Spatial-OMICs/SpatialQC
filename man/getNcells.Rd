% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_update_final.R
\name{getNcells}
\alias{getNcells}
\title{getNcells}
\usage{
getNcells(seu_obj = NULL, expMat = "path_to_expMat", platform = NULL)
}
\arguments{
\item{seu_obj}{Optional; a Seurat object from which to calculate the number of cells. If not provided, \code{expMat} must be specified.}

\item{expMat}{A character string specifying the path to the expression matrix if \code{seu_obj} is not provided. This parameter is used in conjunction with \code{platform} to determine the method for reading the data.}

\item{platform}{Optional; specifies the platform ('Xenium' or 'CosMx') if \code{expMat} is used. Required if \code{expMat} is provided without \code{seu_obj}.}
}
\value{
An integer indicating the total number of cells in the dataset.
}
\description{
Calculate the number of cells present in a given dataset, supporting both Seurat object input(seu_obj)
and direct matrix file paths for imaging based spatial transcriptomic platforms such as Xenium and CosMx.
}
\details{
The function \code{getNcells} offers flexibility in determining cell counts, catering to different types of input. For \code{Xenium} platform datasets, it expects the path to a 'matrix.mtx.gz'
file within the specified \code{expMat} directory and calculates the number of cells by reading the column count of this sparse matrix. For \code{CosMx} datasets, it reads a CSV file specified by \code{expMat},
calculating cell count based on the number of rows. This approach allows for integration into workflows that may start with raw data files or pre-processed Seurat objects, facilitating versatile
data handling practices in transcriptomic analyses.
}
